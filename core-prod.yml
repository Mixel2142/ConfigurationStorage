spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true
    loadbalancer:
      ribbon:
        enabled: false
######################### SPRING BOOT ADMIN CLIENT #########################
management:
  endpoint:
    env.post.enabled: true
    shutdown.enabled: true
    heapdump.enabled: false
    health.show-details: always
  endpoints:
    enabled-by-default: true
    web.exposure.include: "*"

######################### EUREKA client config ############################
eureka:
  instance:
    instanceId: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${random.value}}
    preferIpAddress: false
    metadata-map:
      user.name: ${ACTUATOR_LOGIN}         #These two are needed so that the server
      user.password: ${ACTUATOR_PASSWORD}    #can access the protected client endpoints
  client:
    registryFetchIntervalSeconds: 30
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_HOST}
    healthcheck:
      enabled: true
#instance.preferIpAddress в true и, когда приложение регистрируется в eureka, оно использует свой IP-адрес, а не имя хоста.

######################### Hibernate config ############################
# TODO изменить флаг
spring.jpa.hibernate.ddl-auto: create-drop
spring.datasource.url: jdbc:postgresql://${POSTGRES_HOST}/${POSTGRES_DB}
spring.datasource.username: ${POSTGRES_USER}
spring.datasource.password: ${POSTGRES_PASSWORD}
spring.jpa.show-sql: true

spring.flyway.url: jdbc:postgresql://${POSTGRES_HOST}/${POSTGRES_DB}
spring.flyway.user: ${POSTGRES_USER}
spring.flyway.password: ${POSTGRES_PASSWORD}
